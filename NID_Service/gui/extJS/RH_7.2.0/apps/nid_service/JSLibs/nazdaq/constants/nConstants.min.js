String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
};
Ext.define("nazdaq.constants.ActionType", {
    alias: "nActionType",
    alternateClassName: "nActionType",
    statics: {
        ACTION_TYPE_UPDATE    : "UPDATE",
        ACTION_TYPE_SELECT    : "SELECT",
        ACTION_TYPE_DELETE    : "DELETE",
    }
});

Ext.define("nazdaq.constants.Constants", {
    alias: "nConstants",
    alternateClassName: "nConstants",
    requires: ["nazdaq.constants.ActionType"/*, "nazdaq.constants.ContentType", "nazdaq.constants.StatusType"*/],
    statics: {
        LIBRARY_NAME: "nazdaq.constants",
        LIBRARY_VER: "1.0.0",
        METHOD_POST: "POST",
        DISPATCH_TYPE_AJAX: "Ajax"
    }
});

Ext.define("nazdaq.constants.ContentType", {
    alias: "nContentType",
    alternateClassName: "nContentType",
    statics: {
        CONTENT_TYPE_USER: "User",
        CONTENT_TYPE_USER_NEW: "User",
        CONTENT_TYPE_CLIENT: "Client",
        CONTENT_TYPE_GROUP: "GROUP",
        CONTENT_TYPE_ROLE: "ROLE",
        CONTENT_TYPE_STATUS: "STATUS",
        CONTENT_TYPE_MULTI_MESSAGE: "MULTI_MESSAGE",
        CONTENT_TYPE_MULTI: "MULTI", 
    }
});

Ext.define("nazdaq.constants.StatusType", {
    alias: "nStatusType",
    alternateClassName: "nStatusType",
    statics: {
        STATUS_TYPE_OK: "OK",
        STATUS_TYPE_INFO: "INFO",
        STATUS_TYPE_WARN: "WARN",
        STATUS_TYPE_ERROR: "ERROR"
    }
});
